{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "servicePrincipalAppId": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "ID of your Service Principal. Will be used by the deploy script to create Azure resources on your behalf."
      }
    },
    "servicePrincipalAppKey": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "Password of your Service Principal. Will be used by the deploy script to create Azure resources on your behalf."
      }
    },
    "servicePrincipalTenantId": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "Tenant ID of your Service Principal. Will be used by the deploy script to create Azure resources on your behalf."
      }
    },
    "binderhubName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Namespace to deploy the BinderHub into on the Kubernetes cluster. This will be used to manage the BinderHub resources. Must also be unique across Azure. Your deployment will be accessible at <app-name>.<resource-group-location>.cloudapp.azure.com"
      }
    },
    "binderhubVersion": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The version of the BinderHub Helm Chart to be deployed. This normally takes the form of versionnumber-hash, ie, 0.2.0-ae57d8. Refer to https://jupyterhub.github.io/helm-chart/#development-releases-binderhub for valid version numbers."
      }
    },
    "aksNodeCount": {
      "type": "int",
      "minValue": 1,
      "defaultValue": 3,
      "metadata": {
        "description": "The initial number of nodes to create in the AKS cluster."
      }
    },
    "aksNodeVmSize": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "The default VM size to use for the AKS cluster."
      }
    },
    "imagePrefix": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Prefix to use for docker containers created by the BinderHub"
      }
    },
    "containerRegistry": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "dockerhub",
      "metadata": {
        "description": "Choose between Docker Hub or Azure Container Registry"
      },
      "allowedValues": [
        "dockerhub",
        "azurecr"
      ]
    },
    "dockerHubUsername": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "null",
      "metadata": {
        "description": "The name of a valid Docker Hub user account."
      }
    },
    "dockerHubPassword": {
      "type": "securestring",
      "minLength": 4,
      "defaultValue": "null",
      "metadata": {
        "description": "The user password for Docker Hub"
      }
    },
    "dockerHubOrganisation": {
      "type": "string",
      "defaultValue": "null",
      "metadata": {
        "description": "Organisation to use for Docker Hub; this is an optional value. Docker Username must be a member of this organisation if used."
      }
    },
    "containerRegistryName": {
      "type": "string",
      "minLength": 4,
      "maxLength": 50,
      "defaultValue": "null",
      "metadata": {
        "description": "Name to be given to the Azure Container Registry. Must be unique to Azure."
      }
    },
    "containerRegistrySku": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Basic",
      "metadata": {
        "description": "Capacity and pricing tier for the Azure Container Registry. See the following website for details: https://docs.microsoft.com/en-us/azure/container-registry/container-registry-skus"
      },
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "enableHttps": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Choose to enable HTTPS for a domain name using cert-manager and Let's Encrypt"
      },
      "allowedValues": [
        false,
        true
      ]
    },
    "contactEmail": {
      "type": "string",
      "defaultValue": "null",
      "minLength": 1,
      "metadata": {
        "description": "An email address to provide to Let's Encrypt"
      }
    },
    "domainName": {
      "type": "string",
      "defaultValue": "null",
      "minLength": 1,
      "metadata": {
        "description": "The domain name to provide HTTPS certificates for"
      }
    },
    "certManagerVersion": {
      "type": "string",
      "defaultValue": "null",
      "minLength": 1,
      "metadata": {
        "description": "The version of cert-manager to install. Note: must include the preceding 'v', e.g., v0.11.0. Versions can be found here: https://github.com/jetstack/cert-manager/releases"
      }
    },
    "nginxVersion": {
      "type": "string",
      "defaultValue": "null",
      "minLength": 1,
      "metadata": {
        "description": "The version of nginx-ingress to install, e.g., 1.29.1. Versions can be found here: https://hub.helm.sh/charts/stable/nginx-ingress"
      }
    },
    "setupDockerImage": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "sgibson91/binderhub-setup:1.3.0",
      "metadata": {
        "description": "Docker image to use for the BinderHub deployment. Most recent version number is recommended, latest tag will be subject to fluctuating changes. This image must be publicly accessible."
      },
      "allowedValues": [
        "sgibson91/binderhub-setup:1.3.0",
        "sgibson91/binderhub-setup:1.2.4",
        "sgibson91/binderhub-setup:1.2.3",
        "sgibson91/binderhub-setup:1.2.2",
        "sgibson91/binderhub-setup:1.2.1",
        "sgibson91/binderhub-setup:1.2.0",
        "sgibson91/binderhub-setup:1.1.0",
        "sgibson91/binderhub-setup:1.0.6",
        "sgibson91/binderhub-setup:1.0.5",
        "sgibson91/binderhub-setup:1.0.4",
        "sgibson91/binderhub-setup:1.0.3",
        "sgibson91/binderhub-setup:1.0.2",
        "sgibson91/binderhub-setup:1.0.1",
        "sgibson91/binderhub-setup:1.0.0",
        "sgibson91/binderhub-setup:latest"
      ]
    }
  },
  "resources": [
    {
      "name": "[concat(parameters('binderHubName'), 'setup')]",
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-10-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "properties": {
        "osType": "Linux",
        "restartPolicy": "Never",
        "containers": [
          {
            "name": "binderhub-setup",
            "properties": {
              "image": "[parameters('setupDockerImage')]",
              "environmentVariables": [
                {
                  "name": "BINDERHUB_CONTAINER_MODE",
                  "value": "true"
                },
                {
                  "name": "SP_APP_ID",
                  "value": "[parameters('servicePrincipalAppId')]"
                },
                {
                  "name": "SP_APP_KEY",
                  "secureValue": "[parameters('servicePrincipalAppKey')]"
                },
                {
                  "name": "SP_TENANT_ID",
                  "value": "[parameters('servicePrincipalTenantId')]"
                },
                {
                  "name": "RESOURCE_GROUP_LOCATION",
                  "value": "[resourceGroup().location]"
                },
                {
                  "name": "RESOURCE_GROUP_NAME",
                  "value": "[resourceGroup().name]"
                },
                {
                  "name": "AZURE_SUBSCRIPTION",
                  "value": "[subscription().id]"
                },
                {
                  "name": "BINDERHUB_NAME",
                  "value": "[parameters('binderHubName')]"
                },
                {
                  "name": "BINDERHUB_VERSION",
                  "value": "[parameters('binderHubVersion')]"
                },
                {
                  "name": "AKS_NODE_COUNT",
                  "value": "[parameters('aksNodeCount')]"
                },
                {
                  "name": "AKS_NODE_VM_SIZE",
                  "value": "[parameters('aksNodeVmSize')]"
                },
                {
                  "name": "DOCKER_IMAGE_PREFIX",
                  "value": "[parameters('imagePrefix')]"
                },
                {
                  "name": "CONTAINER_REGISTRY",
                  "value": "[parameters('containerRegistry')]"
                },
                {
                  "name": "DOCKERHUB_USERNAME",
                  "value": "[parameters('dockerHubUsername')]"
                },
                {
                  "name": "DOCKERHUB_PASSWORD",
                  "secureValue": "[parameters('dockerHubPassword')]"
                },
                {
                  "name": "DOCKERHUB_ORGANISATION",
                  "value": "[parameters('dockerHubOrganisation')]"
                },
                {
                  "name": "REGISTRY_NAME",
                  "value": "[parameters('containerRegistryName')]"
                },
                {
                  "name": "REGISTRY_SKU",
                  "value": "[parameters('containerRegistrySku')]"
                },
                {
                  "name": "ENABLE_HTTPS",
                  "value": "[parameters('enableHttps')]"
                },
                {
                  "name": "CONTACT_EMAIL",
                  "value": "[parameters('contactEmail')]"
                },
                {
                  "name": "DOMAIN_NAME",
                  "value": "[parameters('domainName')]"
                },
                {
                  "name": "CERTMANAGER_VERSION",
                  "value": "[parameters('certManagerVersion')]"
                },
                {
                  "name": "NGINX_VERSION",
                  "value": "[parameters('nginxVersion')]"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGB": 1.5
                }
              }
            }
          }
        ]
      }
    }
  ]
}
